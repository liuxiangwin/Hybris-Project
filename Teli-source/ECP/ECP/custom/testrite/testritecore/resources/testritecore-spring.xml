<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2015 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/> 
	<context:component-scan base-package="com.testritegroup.ec.core"/> 
	
	<!-- Spring Integration -->
	<import resource="classpath:/testritecore/integration/hot-folder-store-electronics-spring.xml"/>
	<import resource="classpath:/testritecore/integration/hot-folder-store-apparel-spring.xml"/>
	<import resource="classpath:/testritecore/integration/hot-folder-common-spring.xml"/>


	<!-- Search Definetiong -->
	<import resource="testritecore-spring-search.xml" />

	<!-- SystemSetup for the TestriteCore -->
	<bean id="acceleratorCoreSystemSetup" class="com.testritegroup.ec.core.setup.CoreSystemSetup"
	       parent="abstractCoreSystemSetup"/>

	<util:list id="productCatalogSyncRootTypeCodes">
		<value>ECPImage</value>
		<value>ECPBackendInformation</value>
		<value>ECPDimension</value>
	</util:list>

	<util:list id="contentCatalogSyncRootTypeCodes" >
		<value>CMSItem</value>
		<value>CMSRelation</value>
		<value>Media</value>
		<value>MediaContainer</value>
		<value>BTGItem</value>
		<value>ECPImage</value>
		<value>ECPBackendInformation</value>
		<value>ECPDimension</value>
	</util:list>



	<!--
		Event listeners are singletons, therefore the dependency for a bean in tenant-scope
		must be configured with a lookup method.
	-->
	<bean id="orderCancelledEventListener"
	      class="com.testritegroup.ec.core.event.OrderCancelledEventListener" parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="orderRefundEventListener"
	      class="com.testritegroup.ec.core.event.OrderRefundEventListener" parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="customerRegistrationEventListener"
	      class="com.testritegroup.ec.core.event.RegistrationEventListener" parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="forgottenPasswordEventListener"
	      class="com.testritegroup.ec.core.event.ForgottenPasswordEventListener" parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="submitOrderEventListener" class="com.testritegroup.ec.core.event.SubmitOrderEventListener" parent="abstractSiteEventListener">
		<property name="businessProcessService" ref="businessProcessService"/>
		<property name="modelService" ref="modelService"/>
		<property name="baseStoreService" ref="baseStoreService"/>
	</bean>
	<bean id="orderConfirmationEventListener"
	      class="com.testritegroup.ec.core.event.OrderConfirmationEventListener" parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendDeliveryMessageEventListener"
	      class="com.testritegroup.ec.core.event.SendDeliveryMessageEventListener" parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendReadyForPickupMessageEventListener"
	      class="com.testritegroup.ec.core.event.SendReadyForPickupMessageEventListener" parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendOrderPartiallyCanceledMessageEventListener"
	      class="com.testritegroup.ec.core.event.SendOrderPartiallyCanceledMessageEventListener" parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendOrderPartiallyRefundedMessageEventListener"
	      class="com.testritegroup.ec.core.event.SendOrderPartiallyRefundedMessageEventListener" parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledMessageEventListener"
	      class="com.testritegroup.ec.core.event.SendNotPickedUpConsignmentCanceledMessageEventListener" parent="abstractEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	<bean id="orderCompletedEventListener" class="com.testritegroup.ec.core.event.OrderCompletedEventListener" parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>

	<!-- Process resources definition -->

	<bean id="customerRegistrationEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/customerRegistrationEmailProcess.xml"/>
	</bean>
	<bean id="forgottenPasswordEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/forgottenPasswordEmailProcess.xml"/>
	</bean>
	<bean id="orderConfirmationEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/orderConfirmationEmailProcess.xml"/>
	</bean>
	<bean id="sendDeliveryEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/sendDeliveryEmailProcess.xml"/>
	</bean>
	<bean id="sendReadyForPickupEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/sendReadyForPickupEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderCancelledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/sendOrderCancelledEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderRefundEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/sendOrderRefundEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderPartiallyCanceledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/sendOrderPartiallyCanceledEmailProcess.xml"/>
	</bean>
	<bean id="sendOrderPartiallyRefundedEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/sendOrderPartiallyRefundedEmailProcess.xml"/>
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledEmailProcessDefinitionResource"
	      class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/testritecore/processes/sendNotPickedUpConsignmentCanceledEmailProcess.xml"/>
	</bean>

	<!-- Actions -->
	<bean id="abstractAction" class="de.hybris.platform.processengine.action.AbstractAction"
	      abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="processParameterHelper" ref="processParameterHelper"/>
	</bean>

	<bean id="sendEmail" class="de.hybris.platform.acceleratorservices.process.email.actions.SendEmailAction"
	       parent="abstractAction">
		<property name="emailService" ref="emailService"/>
	</bean>

	<bean id="abstractGenerateEmailAction" class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction"
	      parent="abstractAction" abstract="true">
		<property name="modelService" ref="modelService"/>
		<property name="cmsEmailPageService" ref="cmsEmailPageService"/>
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy"/>
		<property name="emailGenerationService" ref="emailGenerationService"/>
	</bean>

	<bean id="generateCustomerRegistrationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="CustomerRegistrationEmailTemplate"/>
	</bean>

	<bean id="generateForgottenPasswordEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ForgottenPasswordEmailTemplate"/>
	</bean>

	<bean id="generateOrderConfirmationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderConfirmationEmailTemplate"/>
	</bean>
	
	<bean id="generateDeliverySentEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="DeliverySentEmailTemplate"/>
	</bean>

	<bean id="generateReadyForPickupEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ReadyForPickupEmailTemplate"/>
	</bean>
	
	<bean id="generateOrderCancelledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderCancelledEmailTemplate"/>
	</bean>
	
	<bean id="generateOrderRefundEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderRefundEmailTemplate"/>
	</bean>

	<bean id="generateOrderPartiallyCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyCanceledEmailTemplate"/>
	</bean>
	<bean id="generateOrderPartiallyRefundedEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyRefundedEmailTemplate"/>
	</bean>
	<bean id="generateNotPickedUpConsignmentCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="NotPickedUpConsignmentCanceledEmailTemplate"/>
	</bean>

	<bean id="removeSentEmail"
	      class="de.hybris.platform.acceleratorservices.process.email.actions.RemoveSentEmailAction"
	      parent="abstractAction">
		<property name="modelService" ref="modelService"/>
	</bean>

	<!-- Simple Suggestion Service -->
	<alias alias="simpleSuggestionService" name="defaultSimpleSuggestionService"/>
	<bean id="defaultSimpleSuggestionService"
	      class="com.testritegroup.ec.core.suggestion.impl.DefaultSimpleSuggestionService" >
		<property name="simpleSuggestionDao" ref="simpleSuggestionDao"/>
	</bean>
	<alias alias="simpleSuggestionDao" name="defaultSimpleSuggestionDao"/>
	<bean id="defaultSimpleSuggestionDao"
	      class="com.testritegroup.ec.core.suggestion.dao.impl.DefaultSimpleSuggestionDao"
	      parent="abstractItemDao" >
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
	</bean>

	<bean id="mccSiteUrlHelper" class="com.testritegroup.ec.core.util.MccSiteUrlHelper" >
		<property name="siteBaseUrlResolutionService" ref="siteBaseUrlResolutionService"/>
		<property name="cmsSiteService" ref="cmsSiteService"/>
	</bean>


	<!-- checkout flow configuration -->
	
	<bean id="pickUpInStoreCheckoutFlowStrategy" class="com.testritegroup.ec.core.checkout.flow.impl.PickUpInStoreCheckoutFlowStrategy" >
		<property name="pickupStrategy" ref="pickupStrategy" />
		<property name="defaultStrategy" ref="siteCheckoutFlowStrategy"/>
		<property name="multiStepCheckoutFlowStrategy" ref="multiStepCheckoutFlowStrategy" />
	</bean>	

	<bean id="siteCheckoutFlowStrategy"
	      class="com.testritegroup.ec.core.checkout.flow.impl.SiteCheckoutFlowStrategy" >
		<!-- This strategy looks up a strategy based on the current site UID -->
		<property name="cmsSiteService" ref="cmsSiteService"/>
		<property name="siteMappings">
			<map>
				<entry key="electronics" value-ref="newCustomerCheckoutFlowStrategy"/>
				<entry key="apparel-de" value-ref="multiStepCheckoutFlowStrategy"/>
				<entry key="apparel-uk" value-ref="multiStepCheckoutFlowStrategy"/>
			</map>
		</property>
		<!-- Default to SINGLE step checkout -->
		<property name="defaultStrategy" ref="multiStepCheckoutFlowStrategy"/>
	</bean>

	<bean id="newCustomerCheckoutFlowStrategy"
	      class="com.testritegroup.ec.core.checkout.flow.impl.NewCustomerCheckoutFlowStrategy" >
		<!-- This strategy works out if the user has created any data -->
		<property name="userService" ref="userService"/>
		<property name="customerAccountService" ref="customerAccountService"/>
		<property name="defaultStrategy" ref="multiStepCheckoutFlowStrategy"/>
		<property name="newCustomerStrategy" ref="multiStepCheckoutFlowStrategy"/>
	</bean>

	<!-- Product Reference Lookup Strategies-->
	<alias name="apparelCrossSellingProductReferenceTargetStrategy" alias="crossSellingProductReferenceTargetStrategy"/>
	<bean id="apparelCrossSellingProductReferenceTargetStrategy"
	      parent="defaultCrossSellingProductReferenceTargetStrategy">
		<property name="productReferenceTargetStrategies">
			<list merge="true">
				<ref bean="apparelSizeProductReferenceTargetStrategy"/>
			</list>
		</property>
	</bean>

	<bean id="apparelSizeProductReferenceTargetStrategy"
	      class="com.testritegroup.ec.core.strategies.impl.ApparelSizeProductReferenceTargetStrategy">
		<property name="commerceCategoryService" ref="commerceCategoryService"/>
		<property name="rootCategoryCode" value="categories"/>
	</bean>


	<!-- ECPBrand Bean -->

	<bean id="ecpHotSellProductFindStrategy"   class="com.testritegroup.ec.core.category.strategies.impl.ECPHotSellProductFindStrategyMock"/>

	<bean id="ecpNewArrivalProductFindStrategy"   class="com.testritegroup.ec.core.category.strategies.impl.ECPNewArrivalProductFindStrategyMock"/>

	<alias alias="brandDao" name="ecpBrandDao"/>
	<bean id="ecpBrandDao" class="com.testritegroup.ec.core.category.dao.impl.ECPBrandDaoImpl">
		<constructor-arg value="ECPBrand"/>
	</bean>

	<bean id="ecpBrandService" parent="abstractBusinessService" class="com.testritegroup.ec.core.category.impl.ECPBrandServiceImpl">
		<property name="hotSellProductFindStrategy" ref="ecpHotSellProductFindStrategy"/>
		<property name="newArrivalProductFindStrategy" ref="ecpNewArrivalProductFindStrategy"/>
		<property name="brandDao" ref="brandDao"/>
	</bean>
    
    <!-- Alan Liu -->
    <alias name="defaultProductSearchService" alias="productSearchService"/>
    <bean id="defaultProductSearchService" class="com.testritegroup.ec.core.category.impl.DefaultProductSearchService">
        <property name="productSearchDAO" ref="productSearchDAO"/>
    </bean>
    
    <alias alias="productSearchDAO" name="productSearchDAO"/>
	<bean id="productSearchDAO" class="com.testritegroup.ec.core.category.dao.impl.DefaultProductSearchDAO">
		<constructor-arg value="Product"/>
	</bean>

	
</beans>
